{"ast":null,"code":"import _asyncToGenerator from \"/home/louis/Documents/honestmanchester/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/louis/Documents/honestmanchester/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/louis/Documents/honestmanchester/client/src/Confessions.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from 'react';\nimport Moment from 'moment';\nimport './App.css';\n\n// const fetchContent = async () => {\n//     const response = await fetch('/fetch_content');\n//     const content = await response.json();\n\n//     if (response.status !== 200) {\n//         throw Error(response.message);\n//     }\n\n//     // console.log(content[0]);\n//     return content;\n// }\n\nexport var Confessions = function Confessions() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    contentItems = _useState2[0],\n    initContent = _useState2[1];\n  var fetchContent = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/fetch_content');\n          case 2:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 7;\n              break;\n            }\n            throw new Error(\"Data could not be fetched\");\n          case 7:\n            return _context.abrupt(\"return\", response.json());\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function fetchContent() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchContent().then(function (res) {\n      initContent(res);\n    }).catch(function (e) {\n      console.log(e.message);\n    });\n  }, []);\n  // console.log(confessions);\n\n  // console.log(confessions);\n  // const confessions = confessions_res.json()\n\n  // console.log(confessions);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"confessions-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, contentItems.slice(0).reverse().map(function (data, key) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Confession, {\n      key: key,\n      university: data.university,\n      content: data.content,\n      date: Moment(data.date).format('DD MM YYYY'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }));\n  })));\n};\nvar Confession = function Confession(_ref2) {\n  var university = _ref2.university,\n    content = _ref2.content,\n    date = _ref2.date;\n  if (!content) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"confession-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, university), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, content), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, date));\n};","map":{"version":3,"names":["React","useState","useEffect","Moment","Confessions","contentItems","initContent","fetchContent","fetch","response","ok","Error","json","then","res","catch","e","console","log","message","slice","reverse","map","data","key","university","content","date","format","Confession"],"sources":["/home/louis/Documents/honestmanchester/client/src/Confessions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Moment from 'moment';\nimport './App.css';\n\n\n// const fetchContent = async () => {\n//     const response = await fetch('/fetch_content');\n//     const content = await response.json();\n\n//     if (response.status !== 200) {\n//         throw Error(response.message);\n//     }\n\n//     // console.log(content[0]);\n//     return content;\n// }\n\nexport const Confessions = () => {\n    const [contentItems, initContent] = useState([]);\n    const fetchContent = async () => {\n        // console.log(response)\n        const response = await fetch('/fetch_content');\n        if(!response.ok){\n            throw new Error(\"Data could not be fetched\");\n        }else{\n            return response.json();\n        }\n    }\n    useEffect(() => {\n        fetchContent()\n            .then((res) => {\n                initContent(res);\n            })\n            .catch((e) => {\n                console.log(e.message);\n            })\n    }, [])\n        // console.log(confessions);\n    \n    // console.log(confessions);\n    // const confessions = confessions_res.json()\n\n    \n    // console.log(confessions);\n    return(\n        <>\n        <div className='row' id='confessions-row'>\n            {contentItems.slice(0).reverse().map((data, key) =>{\n                return(\n                    <div key={key}>\n                        <Confession \n                            key = {key}\n                            university = {data.university}\n                            content = {data.content}\n                            date = {Moment(data.date).format('DD MM YYYY')}\n                        />\n                    </div>\n                )}\n            )}\n        </div>\n        </>\n    );\n}\n\n\n\nconst Confession = ({university, content, date}) => {\n    if (!content) return <div />;\n    return(\n        <div className='confession-box'>\n            <h3>{university}</h3>\n            <p>{content}</p>\n            <h4>{date}</h4>\n        </div>\n    )\n}\n\n"],"mappings":";;;;+CACA;AADA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,WAAW;;AAGlB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,GAAS;EAAA,gBACOH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCI,YAAY;IAAEC,WAAW;EAChC,IAAMC,YAAY;IAAA,sEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OAEMC,KAAK,CAAC,gBAAgB,CAAC;UAAA;YAAxCC,QAAQ;YAAA,IACVA,QAAQ,CAACC,EAAE;cAAA;cAAA;YAAA;YAAA,MACL,IAAIC,KAAK,CAAC,2BAA2B,CAAC;UAAA;YAAA,iCAErCF,QAAQ,CAACG,IAAI,EAAE;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CAE7B;IAAA,gBARKL,YAAY;MAAA;IAAA;EAAA,GAQjB;EACDL,SAAS,CAAC,YAAM;IACZK,YAAY,EAAE,CACTM,IAAI,CAAC,UAACC,GAAG,EAAK;MACXR,WAAW,CAACQ,GAAG,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,CAAC,EAAK;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,OAAO,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACF;;EAEJ;EACA;;EAGA;EACA,oBACI,uDACA;IAAK,SAAS,EAAC,KAAK;IAAC,EAAE,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpCd,YAAY,CAACe,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE,CAACC,GAAG,CAAC,UAACC,IAAI,EAAEC,GAAG,EAAI;IAC/C,oBACI;MAAK,GAAG,EAAEA,GAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACV,oBAAC,UAAU;MACP,GAAG,EAAIA,GAAI;MACX,UAAU,EAAID,IAAI,CAACE,UAAW;MAC9B,OAAO,EAAIF,IAAI,CAACG,OAAQ;MACxB,IAAI,EAAIvB,MAAM,CAACoB,IAAI,CAACI,IAAI,CAAC,CAACC,MAAM,CAAC,YAAY,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjD,CACA;EACT,CAAC,CACL,CACC,CACH;AAEX,CAAC;AAID,IAAMC,UAAU,GAAG,SAAbA,UAAU,QAAoC;EAAA,IAA/BJ,UAAU,SAAVA,UAAU;IAAEC,OAAO,SAAPA,OAAO;IAAEC,IAAI,SAAJA,IAAI;EAC1C,IAAI,CAACD,OAAO,EAAE,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO;EAC5B,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKD,UAAU,CAAM,eACrB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAIC,OAAO,CAAK,eAChB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKC,IAAI,CAAM,CACb;AAEd,CAAC"},"metadata":{},"sourceType":"module"}